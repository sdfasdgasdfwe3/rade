import asyncio
import subprocess
import os
import requests
import json
from telethon import TelegramClient, events
from random import choice

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
CONFIG_FILE = "config.json"
GITHUB_RAW_URL = "https://raw.githubusercontent.com/sdfasdgasdfwe3/rade/main/bot.py"  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π URL
SCRIPT_VERSION = "0.0.9"
DEFAULT_TYPING_SPEED = 0.3
DEFAULT_CURSOR = u"\u2588"  # –°–∏–º–≤–æ–ª –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏

HEART = 'ü§ç'
COLORED_HEARTS = ['üíó', 'üíì', 'üíñ', 'üíò', '‚ù§Ô∏è', 'üíû']
MAGIC_PHRASES = ['magic']
EDIT_DELAY = 0.01
PARADE_MAP = '''
00000000000
00111011100
01111111110
01111111110
00111111100
00011111000
00001110000
00000100000
'''

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞
client = TelegramClient('session_name', API_ID, API_HASH)

# –§—É–Ω–∫—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
def generate_parade_colored():
    output = ''
    for c in PARADE_MAP:
        if c == '0':
            output += HEART
        elif c == '1':
            output += choice(COLORED_HEARTS)
        else:
            output += c
    return output

async def process_love_words(event):
    await event.edit('i')
    await asyncio.sleep(1)
    await event.edit('i love')
    await asyncio.sleep(1)
    await event.edit('i love you')
    await asyncio.sleep(1)
    await event.edit('i love you forever')
    await asyncio.sleep(1)
    await event.edit('i love you foreverüíó')

async def process_build_place(event):
    output = ''
    for i in range(8):
        output += '\n'
        for j in range(11):
            output += HEART
            await event.edit(output)
            await asyncio.sleep(EDIT_DELAY / 2)

async def process_colored_parade(event):
    for i in range(50):
        text = generate_parade_colored()
        await event.edit(text)
        await asyncio.sleep(EDIT_DELAY)

# –í–∞—à–∏ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∏ –¥—Ä—É–≥–∏–µ, –æ—Å—Ç–∞—é—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º–∏

@client.on(events.NewMessage(pattern=r'(magic)'))
async def handle_magic_phrase(event):
    await process_build_place(event)
    await process_colored_parade(event)
    await process_love_words(event)

@client.on(events.NewMessage(pattern=r'p (.+)'))
async def animated_typing(event):
    global typing_speed, cursor_symbol
    try:
        if not event.out:
            return

        text = event.pattern_match.group(1)
        typed_text = ""

        for char in text:
            typed_text += char
            await event.edit(typed_text + cursor_symbol)
            await asyncio.sleep(typing_speed)

        await event.edit(typed_text)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ {e}")

async def main():
    print(f"–ó–∞–ø—É—Å–∫ main()\n–í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ {SCRIPT_VERSION}")
    
    # –ù–∞—Å—Ç—Ä–æ–∏–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
    setup_autostart()
    
    check_for_updates()
    await client.start(phone=PHONE_NUMBER)
    print("–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ Telegram.")
    print("–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É p –≤–∞—à —Ç–µ–∫—Å—Ç.")
    
    # –ü–µ—á–∞—Ç–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏—é –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ –±–æ—Ç–∞
    print_autostart_instructions()
    
    await client.run_until_disconnected()

if __name__ == "__main__":
    check_for_updates()
    asyncio.run(main())  # –¢–µ–ø–µ—Ä—å asyncio –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –∏ main() –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω
