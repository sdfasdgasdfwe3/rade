import os
import json
import subprocess
import sys
import requests
import importlib
from telethon import TelegramClient, events
import asyncio

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CONFIG_FILE = "config.json"  # –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
GITHUB_RAW_URL = "https://raw.githubusercontent.com/sdfasdgasdfwe3/rade/main/bot.py"  # URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
DOWNLOADS_FOLDER = "/storage/emulated/0/Download/Telegram"  # –ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫ –Ω–∞ Android

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if os.path.exists(CONFIG_FILE):
    with open(CONFIG_FILE, 'r', encoding='utf-8') as f:
        config = json.load(f)
    API_ID = config.get("API_ID")
    API_HASH = config.get("API_HASH")
    PHONE_NUMBER = config.get("PHONE_NUMBER")
else:
    API_ID = input("–í–≤–µ–¥–∏—Ç–µ API_ID: ")
    API_HASH = input("–í–≤–µ–¥–∏—Ç–µ API_HASH: ")
    PHONE_NUMBER = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")
    with open(CONFIG_FILE, 'w', encoding='utf-8') as f:
        json.dump({"API_ID": API_ID, "API_HASH": API_HASH, "PHONE_NUMBER": PHONE_NUMBER}, f)

# –ü—É—Ç—å –¥–ª—è —Å–µ—Å—Å–∏–∏
SESSION_FILE = f"session_{PHONE_NUMBER.replace('+', '').replace('-', '')}"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ Telegram
client = TelegramClient(SESSION_FILE, API_ID, API_HASH)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è
def install_module(file_path):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Python-–º–æ–¥—É–ª—å –∏–∑ .py —Ñ–∞–π–ª–∞.
    """
    try:
        module_name = os.path.basename(file_path).replace('.py', '')
        destination = os.path.join(os.getcwd(), module_name + '.py')
        
        if os.path.exists(destination):
            os.remove(destination)

        os.rename(file_path, destination)
        sys.path.append(os.getcwd())
        importlib.import_module(module_name)
        print(f"–ú–æ–¥—É–ª—å {module_name} —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è: {e}")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
def update_main_file():
    try:
        response = requests.get(GITHUB_RAW_URL)
        if response.status_code == 200:
            main_file_path = os.path.abspath(__file__)
            # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª bot.py —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
            if os.path.basename(main_file_path) == 'bot.py':
                with open(main_file_path, 'w', encoding='utf-8') as f:
                    f.write(response.text)
                print("–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª bot.py –æ–±–Ω–æ–≤–ª–µ–Ω.")
                # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                restart_bot()
            else:
                print("–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–µ-–æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.")
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def restart_bot():
    print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    os.execv(sys.executable, ['python'] + sys.argv)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∞–∫—Ü–∏–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@client.on(events.Reaction)
async def reaction_handler(event):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞ –∫–∞–∫—É—é —Ä–µ–∞–∫—Ü–∏—é —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä –Ω–∞ üëç
    if event.emoji == "üëç":
        # –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –º–æ–¥—É–ª—è
        file_name = "your_module.py"  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥—É–ª—è
        file_path = os.path.join(DOWNLOADS_FOLDER, file_name)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫
        if os.path.exists(file_path):
            print(f"–ú–æ–¥—É–ª—å –Ω–∞–π–¥–µ–Ω: {file_path}")
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å
            if install_module(file_path):
                await event.reply("–ú–æ–¥—É–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
            else:
                await event.reply("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª—å.")
        else:
            await event.reply("–ú–æ–¥—É–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫.")

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
async def main():
    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞
    update_main_file()

    # –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    await client.start(PHONE_NUMBER)
    print("–ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!")

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())
