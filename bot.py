import os
import sys
import configparser
from pyrogram import Client, filters
from pyrogram.errors import SessionPasswordNeeded

def debug_config():
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–Ω—Ñ–∏–≥–∞"""
    print("\n=== –î–ï–ë–ê–ì –ö–û–ù–§–ò–ì–ê ===")
    print(f"–§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {os.path.exists('config.ini')}")
    if os.path.exists('config.ini'):
        with open('config.ini', 'r') as f:
            content = f.read()
            print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:\n{content}")
    print("====================\n")

def setup_config():
    config = configparser.ConfigParser()
    config_path = os.path.abspath('config.ini')
    
    try:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
        if not os.path.exists(config_path):
            raise FileNotFoundError("–ö–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        # –ß—Ç–µ–Ω–∏–µ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–∏
        with open(config_path, 'r', encoding='utf-8') as f:
            config.read_file(f)
            
        # –ñ–µ—Å—Ç–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
        if not config.has_section('pyrogram'):
            raise ValueError("–°–µ–∫—Ü–∏—è [pyrogram] –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
        required = {
            'api_id': "API_ID –Ω–µ –Ω–∞–π–¥–µ–Ω",
            'api_hash': "API_HASH –Ω–µ –Ω–∞–π–¥–µ–Ω", 
            'phone_number': "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω"
        }
        
        for key, error_msg in required.items():
            if not config.get('pyrogram', key, fallback=None):
                raise ValueError(error_msg)
                
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥ –≤–∞–ª–∏–¥–µ–Ω")
        return config
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        debug_config()
        
        # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
        print("\n=== –ü–ï–†–ï–°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–ê ===")
        config['pyrogram'] = {
            'api_id': input("–í–≤–µ–¥–∏—Ç–µ API_ID: ").strip(),
            'api_hash': input("–í–≤–µ–¥–∏—Ç–µ API_HASH: ").strip(),
            'phone_number': input("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (+7...): ").strip()
        }
        
        with open(config_path, 'w', encoding='utf-8') as f:
            config.write(f)
            
        print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω!")
        return config

def main():
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if not os.access(os.getcwd(), os.W_OK):
        print("‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é!")
        sys.exit(1)
        
    config = setup_config()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∑–Ω–∞—á–µ–Ω–∏–π
    try:
        app = Client(
            "session",
            api_id=int(config.get('pyrogram', 'api_id')),
            api_hash=config.get('pyrogram', 'api_hash'),
            phone_number=config.get('pyrogram', 'phone_number'),
            app_version="RadeBot 2.0",
            system_version="Termux 1.0"
        )
    except ValueError as e:
        print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π API_ID: {e}")
        os.remove('config.ini')
        return main()

    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    try:
        with app:
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    except SessionPasswordNeeded:
        print("\nüîê –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—ç—Ç–∞–ø–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
        app.password = input("–ü–∞—Ä–æ–ª—å: ").strip()
        try:
            with app:
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø–∞—Ä–æ–ª–µ–º —É—Å–ø–µ—à–Ω–∞!")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
            sys.exit(1)

    @app.on_message(filters.command("start"))
    def start(client, message):
        message.reply("‚ö° –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ!")

    print("\nüöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –î–ª—è –≤—ã—Ö–æ–¥–∞: Ctrl+C")
    app.run()

if __name__ == "__main__":
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
    while True:
        try:
            main()
            break
        except Exception as e:
            print(f"üõë –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            answer = input("–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞? (y/n): ").strip().lower()
            if answer != 'y':
                break
