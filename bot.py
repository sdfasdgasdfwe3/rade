import os
import configparser
from pyrogram import Client, filters
from pyrogram.errors import SessionPasswordNeeded

config = configparser.ConfigParser()

def validate_config():
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–µ–∫—Ü–∏–∏
        if not config.has_section('pyrogram'):
            raise ValueError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–µ–∫—Ü–∏—è [pyrogram] –≤ –∫–æ–Ω—Ñ–∏–≥–µ")
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        required = ['api_id', 'api_hash', 'phone_number']
        for key in required:
            if not config.get('pyrogram', key, fallback=None):
                raise ValueError(f"–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ–ª–µ: {key}")
                
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def setup_config():
    if not os.path.exists('config.ini'):
        print("\n=== –ù–ê–°–¢–†–û–ô–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===")
        config['pyrogram'] = {
            'api_id': input("–í–≤–µ–¥–∏—Ç–µ API_ID: ").strip(),
            'api_hash': input("–í–≤–µ–¥–∏—Ç–µ API_HASH: ").strip(),
            'phone_number': input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (+7XXX...): ").strip()
        }
        with open('config.ini', 'w') as f:
            config.write(f)
        print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
        return
    
    # –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω
    config.read('config.ini')
    if not validate_config():
        print("–£–¥–∞–ª—è—é –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥...")
        os.remove('config.ini')
        setup_config()

def get_client():
    return Client(
        "session",
        api_id=config.get('pyrogram', 'api_id'),
        api_hash=config.get('pyrogram', 'api_hash'),
        phone_number=config.get('pyrogram', 'phone_number'),
        app_version="RadeBot 1.0"
    )

def handle_2fa(app):
    try:
        with app:
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    except SessionPasswordNeeded:
        print("\n‚ö† –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è")
        password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ").strip()
        app.password = password
        try:
            with app:
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø–∞—Ä–æ–ª–µ–º —É—Å–ø–µ—à–Ω–∞!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            exit(1)

def main():
    setup_config()
    config.read('config.ini')
    
    app = get_client()
    handle_2fa(app)

    @app.on_message(filters.command("start"))
    def start_handler(client, message):
        message.reply_text("ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")

    print("\nüöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    app.run()

if __name__ == "__main__":
    main()
