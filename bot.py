import os
import re
import sys
import asyncio
import aiohttp
import subprocess
import shutil
from telethon import TelegramClient, events
from telethon.errors import SessionPasswordNeededError, PhoneCodeInvalidError
from configparser import ConfigParser

VERSION = "1.5"
GITHUB_RAW_URL = "https://raw.githubusercontent.com/sdfasdgasdfwe3/rade/main/bot.py"
CONFIG_FILE = 'config.ini'
SESSION_FILE = 'session_name'

async def authenticate(client, phone):
    try:
        await client.send_code_request(phone)
        code = input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑ Telegram: ")
        return await client.sign_in(phone=phone, code=code)
    except PhoneCodeInvalidError:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!")
        return await authenticate(client, phone)
    except SessionPasswordNeededError:
        password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: ")
        return await client.sign_in(password=password)

async def main():
    print(f"üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤–µ—Ä—Å–∏–∏ {VERSION}")
    await self_update()
    
    config = create_or_read_config()
    client = TelegramClient(SESSION_FILE, 
                          int(config['api_id']), 
                          config['api_hash'])
    
    try:
        await client.start(phone=lambda: config['phone_number'])
        if not await client.is_user_authorized():
            print("üîê –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
            await authenticate(client, config['phone_number'])
        
        print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
        print("\nüõ†Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("/a - –í—ã–±–æ—Ä –∞–Ω–∏–º–∞—Ü–∏–∏")
        print("/update - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ")
        print("/exit - –í—ã—Ö–æ–¥ –∏–∑ –±–æ—Ç–∞\n")

        while True:
            cmd = await asyncio.get_event_loop().run_in_executor(None, input, "> ")
            if cmd.strip() == '/update':
                await self_update()
            elif cmd.strip() == '/a':
                script_name = "animation_script.py"
                if not os.path.exists(script_name):
                    print(f"‚õî –°–∫—Ä–∏–ø—Ç {script_name} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                else:
                    print(f"üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º {script_name}...")
                    await client.disconnect()
                    subprocess.Popen([sys.executable, script_name])
                    sys.exit(0)
            elif cmd.strip() == '/exit':
                await client.disconnect()
                sys.exit(0)
                
    except Exception as e:
        print(f"‚õî –û—à–∏–±–∫–∞: {str(e)}")
        await client.disconnect()

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüõë –†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
