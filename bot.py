import os
import configparser
from pyrogram import Client, filters
from pyrogram.errors import SessionPasswordNeeded

def setup_config():
    config = configparser.ConfigParser()
    config_path = 'config.ini'
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    if not os.path.exists(config_path):
        print("\n=== –ù–û–í–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===")
        config['pyrogram'] = {
            'api_id': input("–í–≤–µ–¥–∏—Ç–µ API_ID: ").strip(),
            'api_hash': input("–í–≤–µ–¥–∏—Ç–µ API_HASH: ").strip(),
            'phone_number': input("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (+79991234567): ").strip()
        }
        
        with open(config_path, 'w') as f:
            config.write(f)
        print("\n‚úÖ –ö–æ–Ω—Ñ–∏–≥ —Å–æ–∑–¥–∞–Ω!")
        return config

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
    try:
        config.read(config_path)
        
        if not config.has_section('pyrogram'):
            raise ValueError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–µ–∫—Ü–∏—è [pyrogram]")
            
        required = ['api_id', 'api_hash', 'phone_number']
        for key in required:
            if not config.get('pyrogram', key, fallback=None):
                raise ValueError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä: {key}")
                
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥ –≤–∞–ª–∏–¥–µ–Ω")
        return config
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞: {e}")
        os.remove(config_path)
        return setup_config()

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–∞
    config = setup_config()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    app = Client(
        "session",
        api_id=config.get('pyrogram', 'api_id'),
        api_hash=config.get('pyrogram', 'api_hash'),
        phone_number=config.get('pyrogram', 'phone_number')
    )
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    try:
        with app:
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")
    except SessionPasswordNeeded:
        print("\nüîê –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–≤—É—Ö—ç—Ç–∞–ø–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
        app.password = input("–ü–∞—Ä–æ–ª—å: ").strip()
        try:
            with app:
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –ø–∞—Ä–æ–ª–µ–º —É—Å–ø–µ—à–Ω–∞!")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            exit(1)

    # –•—ç–Ω–¥–ª–µ—Ä—ã
    @app.on_message(filters.command("start"))
    def start(client, message):
        message.reply("ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω!")

    print("\nüöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C")
    app.run()

if __name__ == "__main__":
    main()
