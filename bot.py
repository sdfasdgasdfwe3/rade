import os
import json
import subprocess
import sys
import requests
import importlib
from telethon import TelegramClient, events
from telethon.tl.types import MessageMediaDocument
import asyncio

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
CONFIG_FILE = "config.json"  # –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
GITHUB_RAW_URL = "https://raw.githubusercontent.com/sdfasdgasdfwe3/rade/main/bot.py"  # URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
DOWNLOADS_FOLDER = "/storage/emulated/0/Download/Telegram/"  # –ü–∞–ø–∫–∞ –∑–∞–≥—Ä—É–∑–æ–∫ –Ω–∞ Android

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if os.path.exists(CONFIG_FILE):
    with open(CONFIG_FILE, 'r', encoding='utf-8') as f:
        config = json.load(f)
    API_ID = config.get("API_ID")
    API_HASH = config.get("API_HASH")
    PHONE_NUMBER = config.get("PHONE_NUMBER")
else:
    API_ID = input("–í–≤–µ–¥–∏—Ç–µ API_ID: ")
    API_HASH = input("–í–≤–µ–¥–∏—Ç–µ API_HASH: ")
    PHONE_NUMBER = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ")
    with open(CONFIG_FILE, 'w', encoding='utf-8') as f:
        json.dump({"API_ID": API_ID, "API_HASH": API_HASH, "PHONE_NUMBER": PHONE_NUMBER}, f)

# –ü—É—Ç—å –¥–ª—è —Å–µ—Å—Å–∏–∏
SESSION_FILE = f"session_{PHONE_NUMBER.replace('+', '').replace('-', '')}"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ Telegram
client = TelegramClient(SESSION_FILE, API_ID, API_HASH)

# –ú–æ–¥—É–ª—å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è
def install_module(file_path):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Python-–º–æ–¥—É–ª—å –∏–∑ .py —Ñ–∞–π–ª–∞.
    """
    try:
        module_name = os.path.basename(file_path).replace('.py', '')
        destination = os.path.join(os.getcwd(), module_name + '.py')
        os.rename(file_path, destination)
        sys.path.append(os.getcwd())
        importlib.import_module(module_name)
        print(f"–ú–æ–¥—É–ª—å {module_name} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥—É–ª—è: {e}")
        return False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
def update_main_file():
    try:
        response = requests.get(GITHUB_RAW_URL)
        if response.status_code == 200:
            main_file_path = os.path.abspath(__file__)
            # –°–∫–∞—á–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª bot.py —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
            if os.path.basename(main_file_path) == 'bot.py':
                with open(main_file_path, 'w', encoding='utf-8') as f:
                    f.write(response.text)
                print("–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª bot.py –æ–±–Ω–æ–≤–ª–µ–Ω.")
            else:
                print("–ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–µ-–æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.")
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def restart_bot():
    print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    os.execv(sys.executable, ['python'] + sys.argv)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
def get_installed_modules():
    installed_modules = []
    for dist in subprocess.check_output([sys.executable, '-m', 'pip', 'freeze']).decode().splitlines():
        installed_modules.append(dist.split('==')[0])
    return installed_modules

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
@client.on(events.NewMessage(pattern="/modules"))
async def handler(event):
    installed_modules = get_installed_modules()
    response = "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:\n" + "\n".join(installed_modules)
    await event.reply(response)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
@client.on(events.MessageReactions)
async def reaction_handler(event):
    """
    –†–µ–∞–≥–∏—Ä—É–µ–º –Ω–∞ —Ä–µ–∞–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é üëç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º.
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∞–∫—Ü–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω—É–∂–Ω–æ–π
    if event.emoji == "üëç":  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω—É–∂–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é
        print(f"–†–µ–∞–∫—Ü–∏—è {event.emoji} –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {event.sender_id}")

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–æ–±—â–µ–Ω–∏–∏, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Ä–µ–∞–∫—Ü–∏—è
        message = event.message  # –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Ä–µ–∞–∫—Ü–∏—é
        print(f"–†–µ–∞–∫—Ü–∏—è –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º ID {message.id} –æ—Ç {message.sender_id}")

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        print(f"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {message.text}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if message.media:
            if isinstance(message.media, MessageMediaDocument):
                # –ï—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª, —Ç–æ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ
                file = message.media.document
                file_name = file.attributes[0].file_name  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞
                print(f"–ò–º—è —Ñ–∞–π–ª–∞: {file_name}")
                
                # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É –∑–∞–≥—Ä—É–∑–æ–∫
                file_path = await event.download_media(DOWNLOADS_FOLDER)
                print(f"–§–∞–π–ª {file_name} —Å–∫–∞—á–∞–Ω –≤ –ø–∞–ø–∫—É {DOWNLOADS_FOLDER}")

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥—É–ª—å, –µ—Å–ª–∏ —ç—Ç–æ python —Ñ–∞–π–ª
                if file_name.endswith('.py'):
                    if install_module(file_path):
                        await event.reply("–ú–æ–¥—É–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
                    else:
                        await event.reply("–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥—É–ª—å.")
                else:
                    await event.reply(f"–§–∞–π–ª {file_name} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è Python-–º–æ–¥—É–ª–µ–º.")
            else:
                await event.reply("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª–∞.")
        else:
            await event.reply("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ–∞–π–ª–∞.")

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –±–æ—Ç–∞
async def main():
    # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
    update_main_file()
    
    # –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    await client.start(PHONE_NUMBER)
    print("–ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∏ –∑–∞–ø—É—â–µ–Ω!")
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await client.run_until_disconnected()

if __name__ == "__main__":
    asyncio.run(main())
