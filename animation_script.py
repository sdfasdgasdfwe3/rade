ANIMATION_SCRIPT_VERSION = "0.2.77"

import asyncio
import random

typing_speed = 0.4
pixel_typing_speed = 0.2
random_reveal_speed = 0.2
led_display_speed = 0.3
cursor_symbol = "‚ñÆ"

async def animate_text(event, text):
    """–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è: –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –º–∏–≥–∞—é—â–∏–º –∫—É—Ä—Å–æ—Ä–æ–º."""
    displayed_text = ""
    msg = await event.edit(displayed_text + cursor_symbol)
    for char in text:
        displayed_text += char
        try:
            await msg.edit(displayed_text + cursor_symbol)
        except Exception:
            pass
        await asyncio.sleep(typing_speed)
    await msg.edit(displayed_text)

async def pixel_destruction(event, text):
    """–ê–Ω–∏–º–∞—Ü–∏—è '–ü–∏–∫—Å–µ–ª—å–Ω–æ–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ': —Å–Ω–∞—á–∞–ª–∞ –ø–∏–∫—Å–µ–ª–∏–∑–∞—Ü–∏—è, –∑–∞—Ç–µ–º —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞."""
    lines_count = 4
    chunk_size = max(1, len(text) // lines_count)
    text_lines = [text[i:i+chunk_size] for i in range(0, len(text), chunk_size)]
    previous_text = ""
    # –§–∞–∑–∞ 1: –ø–∏–∫—Å–µ–ª–∏–∑–∞—Ü–∏—è
    pixelated_text = [list(" " * len(line)) for line in text_lines]
    for _ in range(3):
        for i in range(len(pixelated_text)):
            for j in range(len(pixelated_text[i])):
                if random.random() < 0.1:
                    pixelated_text[i][j] = random.choice([".", "*", "‚óã", "‚äô", "%"])
        displayed_text = "\n".join("".join(line) for line in pixelated_text)
        if displayed_text != previous_text:
            try:
                await event.edit(displayed_text)
                previous_text = displayed_text
            except Exception:
                pass
        await asyncio.sleep(pixel_typing_speed)
    # –§–∞–∑–∞ 2: —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ
    for _ in range(3):
        displayed_text = "\n".join(
            "".join(random.choice([".", "*", " ", "‚óã", "‚äô"]) for _ in line)
            for line in text_lines
        )
        if displayed_text != previous_text:
            try:
                await event.edit(displayed_text)
                previous_text = displayed_text
            except Exception:
                pass
        await asyncio.sleep(pixel_typing_speed)
    await event.edit(text)

async def random_reveal(event, text):
    """–ê–Ω–∏–º–∞—Ü–∏—è '–°–ª—É—á–∞–π–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –±—É–∫–≤': –±—É–∫–≤—ã –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ."""
    hidden_text = ["*" if char != " " else " " for char in text]
    msg = await event.edit("".join(hidden_text))  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∫—Ä—ã—Ç—ã–π —Ç–µ–∫—Å—Ç

    indices = list(range(len(text)))  # –ò–Ω–¥–µ–∫—Å—ã –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤
    random.shuffle(indices)  # –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –ø–æ—Ä—è–¥–æ–∫ –ø–æ—è–≤–ª–µ–Ω–∏—è –±—É–∫–≤

    for index in indices:
        hidden_text[index] = text[index]  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—É–∫–≤—É
        try:
            await msg.edit("".join(hidden_text))  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        except Exception:
            pass
        await asyncio.sleep(random_reveal_speed)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –±—É–∫–≤–∞–º–∏

    await msg.edit(text)  # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç

async def led_display(event, text):
    """–ê–Ω–∏–º–∞—Ü–∏—è '–°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–π —ç–∫—Ä–∞–Ω': –±—É–∫–≤—ã –ø–æ—è–≤–ª—è—é—Ç—Å—è –ø–æ —á–∞—Å—Ç—è–º, –∫–∞–∫ –Ω–∞ —Ç–∞–±–ª–æ."""
    hidden_text = ["‚¨õ" for _ in text]  # –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–≤—Å–µ –±—É–∫–≤—ã —Å–∫—Ä—ã—Ç—ã)
    msg = await event.edit("".join(hidden_text))

    for i in range(len(text)):
        hidden_text[i] = text[i]  # –ó–∞–º–µ–Ω—è–µ–º ‚¨õ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –±—É–∫–≤—É
        try:
            await msg.edit("".join(hidden_text))  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        except Exception:
            pass
        await asyncio.sleep(led_display_speed)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –±—É–∫–≤–æ–π

    await msg.edit(text)  # –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç

# –°–ª–æ–≤–∞—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π
animations = {
    1: ("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è ‚úçÔ∏è", animate_text),
    2: ("–ü–∏–∫—Å–µ–ª—å–Ω–æ–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ üí•", pixel_destruction),
    3: ("–°–ª—É—á–∞–π–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –±—É–∫–≤ üé≤", random_reveal),
    4: ("–°–≤–µ—Ç–æ–¥–∏–æ–¥–Ω—ã–π —ç–∫—Ä–∞–Ω üî≤", led_display)
}

